// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String            @id @default(uuid())
  email        String            @unique
  password     String?
  googleId     String?           @unique
  firstName    String
  lastName     String
  displayName  String
  profileImage String?           @default("https://res.cloudinary.com/du8nkdwcp/image/upload/w_1000,c_fill,ar_1:1,g_auto,r_max,bo_5px_solid_red,b_rgb:262c35/v1703686205/DALL_E_2023-12-27_15.08.43_-_A_less_cartoonish_and_more_artistically_drawn_medieval_potato_character._This_potato_has_a_slightly_more_realistic_appearance_with_subtle_cartoon_feat_ho7wtk.png")
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  isAdmin      Boolean           @default(false)
  games        Game[]
  participants GameParticipant[]
}

model Game {
  id           String            @id @default(uuid())
  name         String
  description  String?
  createdAt    DateTime          @default(now())
  creatorId    String
  creator      User              @relation(fields: [creatorId], references: [id])
  maps         Map[]
  participants GameParticipant[]
  tokens       Token[]
}

model Map {
  id      String @id @default(uuid())
  name    String
  mapData Json
  gameId  String
  game    Game   @relation(fields: [gameId], references: [id])
}

model GameParticipant {
  id       String   @id @default(uuid())
  userId   String
  user     User     @relation(fields: [userId], references: [id])
  gameId   String
  game     Game     @relation(fields: [gameId], references: [id])
  role     String
  joinedAt DateTime @default(now())
}

model Token {
  id        String @id @default(uuid())
  type      String
  tokenData Json
  gameId    String
  game      Game   @relation(fields: [gameId], references: [id])
}
